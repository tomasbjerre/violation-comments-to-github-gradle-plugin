buildscript {
 repositories {
  mavenLocal()
  mavenCentral()
 }

 dependencies {
  classpath "se.bjurr.violations:violation-comments-to-github-gradle-plugin:latest.integration"
 }
}

/**
 * When running in Travis, you may add custom environment variable GITHUB_OAUTH2TOKEN and do something like:
 *  ./gradlew violationCommentsToGitHub -DGITHUB_PULLREQUESTID=$TRAVIS_PULL_REQUEST -DGITHUB_OAUTH2TOKEN=$GITHUB_OAUTH2TOKEN
 * Or define username/password variables: 
 *  ./gradlew violationCommentsToGitHub -DGITHUB_PULLREQUESTID=$TRAVIS_PULL_REQUEST -DGITHUB_USERNAME=$GITHUB_USERNAME -DGITHUB_PASSWORD=$GITHUB_PASSWORD
 */
apply plugin: "se.bjurr.violations.violation-comments-to-github-gradle-plugin"
task violationCommentsToGitHub(type: se.bjurr.violations.comments.github.plugin.gradle.ViolationCommentsToGitHubTask) {
 repositoryOwner = "kmalmur";
 repositoryName = "violation-comments-to-github-gradle-plugin"
 pullRequestId = System.properties['GITHUB_PULLREQUESTID']
 username = System.properties['GITHUB_USERNAME']
 password = System.properties['GITHUB_PASSWORD']
 oAuth2Token = System.properties['GITHUB_OAUTH2TOKEN']
 gitHubUrl = "https://api.github.com/"
 createCommentWithAllSingleFileComments = true
 createSingleFileComments = true
 commentOnlyChangedContent = true
 minSeverity = se.bjurr.violations.lib.model.SEVERITY.INFO //ERROR, INFO, WARN
 keepOldComments = false
 commentTemplate = """
**Reporter**: {{violation.reporter}}{{#violation.rule}}

**Rule**: {{violation.rule}}{{/violation.rule}}
**Severity**: {{violation.severity}}
**File**: {{violation.file}} L{{violation.startLine}}{{#violation.source}}

**Source**: {{violation.source}}{{/violation.source}}

{{violation.message}}
 """
 violations = [
  ["FINDBUGS",   ".", ".*/findbugs/.*\\.xml\$",   "Findbugs"],
  ["PMD",        ".", ".*/pmd/.*\\.xml\$",        "PMD"],
  ["CHECKSTYLE", ".", ".*/checkstyle/.*\\.xml\$", "Checkstyle"],
  ["JSLINT",     ".", ".*/jshint/.*\\.xml\$",     "JSHint"],
  ["CSSLINT",    ".", ".*/csslint/.*\\.xml\$",     "CssLint"]
 ]
}
